version: '3.8'

services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: santaserver
      POSTGRES_PASSWORD: santaserver_dev
      POSTGRES_DB: santaserver
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U santaserver"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=santaserver
      - POSTGRES_PASSWORD=santaserver_dev
      - POSTGRES_DB=santaserver
      - POSTGRES_PORT=5432
      - SECRET_KEY=development_secret_key_change_in_production
      - TENANT_ID=your_tenant_id
      - CLIENT_ID=your_client_id
      - CLIENT_SECRET=your_client_secret
      - BACKEND_CORS_ORIGINS=http://localhost,http://localhost:3000,http://localhost:80
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: yarn dev -- --host 0.0.0.0

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8088:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: